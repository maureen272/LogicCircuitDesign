// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/26/2023 21:09:53"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          work5
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module work5_vlg_vec_tst();
// constants                                           
// general purpose registers
reg ce;
reg clk;
reg d1;
reg d2;
reg d3;
reg d4;
reg rst;
// wires                                               
wire A1;
wire A2;
wire A3;
wire A4;
wire B1;
wire B2;
wire B3;
wire B4;

// assign statements (if any)                          
work5 i1 (
// port map - connection between master ports and signals/registers   
	.A1(A1),
	.A2(A2),
	.A3(A3),
	.A4(A4),
	.B1(B1),
	.B2(B2),
	.B3(B3),
	.B4(B4),
	.ce(ce),
	.clk(clk),
	.d1(d1),
	.d2(d2),
	.d3(d3),
	.d4(d4),
	.rst(rst)
);
initial 
begin 
#1000000 $finish;
end 

// clk
initial
begin
	clk = 1'b1;
	# 20000;
	repeat(2)
	begin
		clk = 1'b0;
		clk = #20000 1'b1;
		# 20000;
	end
	clk = 1'b0;
	clk = #100000 1'b1;
	clk = #20000 1'b0;
	clk = #140000 1'b1;
	# 20000;
	repeat(15)
	begin
		clk = 1'b0;
		clk = #20000 1'b1;
		# 20000;
	end
	clk = 1'b0;
end 

// ce
initial
begin
	ce = 1'b0;
	ce = #80000 1'b1;
	ce = #40000 1'b0;
	ce = #60000 1'b1;
	ce = #40000 1'b0;
	ce = #140000 1'b1;
	ce = #180000 1'b0;
end 

// d1
initial
begin
	d1 = 1'b0;
	d1 = #80000 1'b1;
	d1 = #40000 1'b0;
end 

// d2
initial
begin
	d2 = 1'b0;
	d2 = #80000 1'b1;
	d2 = #40000 1'b0;
end 

// d3
initial
begin
	d3 = 1'b0;
	d3 = #200000 1'b1;
	d3 = #40000 1'b0;
end 

// d4
initial
begin
	d4 = 1'b0;
	d4 = #200000 1'b1;
	d4 = #40000 1'b0;
end 

// rst
initial
begin
	rst = 1'b1;
end 
endmodule

